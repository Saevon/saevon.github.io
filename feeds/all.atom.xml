<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Saevon.ca</title><link href="//blog.saevon.ca/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>//blog.saevon.ca/</id><updated>2015-08-13T00:00:00-04:00</updated><entry><title>Compiling Assembly, Integrating with C</title><link href="//blog.saevon.ca/coding/compiling-assembly-integrating-with-c/" rel="alternate"></link><updated>2015-08-13T00:00:00-04:00</updated><author><name>Saevon</name></author><id>tag://blog.saevon.ca,2015-08-13:coding/compiling-assembly-integrating-with-c/</id><summary type="html">&lt;p&gt;Compiling assembly with C is actually pretty easy, you can even get pre-processor commands into your assembly so you can re-use constants between the two.&lt;/p&gt;
&lt;section class="&amp;quot;section section1&amp;quot;" id="situation"&gt;&lt;h1&gt;Situation&lt;/h1&gt;
&lt;p&gt;While writing my microkernel, it was necessary to add a machine specific context switch, for the ARM-920T processor. This meant I needed to add assembly to my C code.&lt;/p&gt;
&lt;p&gt;I also needed to have my user tasks call syscall functions, which ended up being stubs for the &lt;code&gt;swi&lt;/code&gt; ARM assembly command. Thus I needed assembly there too, however it needed to share the &lt;code&gt;syscall_id&lt;/code&gt; value between the kernel syscall handler, and the user syscall stubs.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section1&amp;quot;" id="how-to-create-the-code"&gt;&lt;h1&gt;How to create the code&lt;/h1&gt;
&lt;section class="&amp;quot;section section2&amp;quot;" id="header-files"&gt;&lt;h2&gt;Header files&lt;/h2&gt;
&lt;p&gt;First comes the assemble helpers that will let us add immediate values using standard pre-processor constants.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// asm.h&lt;/span&gt;

&lt;span class="cp"&gt;#define immed(val) # ## val&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It simply defines adds a &lt;code&gt;#&lt;/code&gt; in front of the value (since ARM assembly uses a hash sign to mark immediate values)&lt;/p&gt;
&lt;p&gt;Then define the function headers, so your C compiler knows that the functions will exist when you call the linker later.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;// syscall.h&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;priority&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally we have our shared &lt;code&gt;syscall_id&lt;/code&gt; definitions.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#define SYSCALL_ID_CREATE    1&lt;/span&gt;
&lt;span class="cp"&gt;#define SYSCALL_ID_EXIT      12&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/section&gt;&lt;section class="&amp;quot;section section2&amp;quot;" id="assembly"&gt;&lt;h2&gt;Assembly&lt;/h2&gt;
&lt;p&gt;&lt;div class="alert alert-info "&gt;&lt;i class="fa fa-info-circle"&gt;&lt;/i&gt;
    The code highlighter doesn't support this, but the "@&amp;hellip;" lines are comments in ARM Assembly
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;You can see the &lt;code&gt;immed(SYSCALL_ID_CREATE)&lt;/code&gt; doing its job to put the value properly into assembly&lt;/p&gt;
&lt;div class="no-pre-err"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="nf"&gt;sycall.S&lt;/span&gt;

&lt;span class="c"&gt;#include &amp;lt;machine/asm.h&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;#include &amp;lt;kern/syscall_id.h&amp;gt;&lt;/span&gt;

&lt;span class="err"&gt;@-----------------------------------------------------------&lt;/span&gt;
&lt;span class="na"&gt;.text&lt;/span&gt;
&lt;span class="na"&gt;.align&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="na"&gt;.global&lt;/span&gt; &lt;span class="no"&gt;Create&lt;/span&gt;
&lt;span class="na"&gt;.type&lt;/span&gt;   &lt;span class="no"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="no"&gt;function&lt;/span&gt;
&lt;span class="nl"&gt;Create:&lt;/span&gt;
    &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="nf"&gt;args&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;pretend&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;frame&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;
    &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="nf"&gt;frame_needed&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;uses_anonymous_args&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="nf"&gt;Push&lt;/span&gt; &lt;span class="no"&gt;the&lt;/span&gt; &lt;span class="no"&gt;args&lt;/span&gt;
    &lt;span class="nf"&gt;stmfd&lt;/span&gt; &lt;span class="no"&gt;sp&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="no"&gt;r0-r1&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;

    &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="nf"&gt;Software&lt;/span&gt; &lt;span class="no"&gt;interrupt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;doing&lt;/span&gt; &lt;span class="no"&gt;the&lt;/span&gt; &lt;span class="no"&gt;syscall&lt;/span&gt;
    &lt;span class="nf"&gt;swi&lt;/span&gt; &lt;span class="no"&gt;immed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYSCALL_ID_CREATE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="nf"&gt;Fix&lt;/span&gt; &lt;span class="no"&gt;the&lt;/span&gt; &lt;span class="no"&gt;stack&lt;/span&gt; &lt;span class="no"&gt;pointer&lt;/span&gt;
    &lt;span class="nf"&gt;add&lt;/span&gt; &lt;span class="no"&gt;sp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;sp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c"&gt;#8&lt;/span&gt;

    &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="nf"&gt;Exit&lt;/span&gt; &lt;span class="no"&gt;back&lt;/span&gt; &lt;span class="no"&gt;to&lt;/span&gt; &lt;span class="no"&gt;previous&lt;/span&gt; &lt;span class="no"&gt;frame&lt;/span&gt;
    &lt;span class="nf"&gt;mov&lt;/span&gt; &lt;span class="no"&gt;pc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;lr&lt;/span&gt;
&lt;span class="na"&gt;.size&lt;/span&gt;   &lt;span class="no"&gt;Create&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;.-Create&lt;/span&gt;
&lt;span class="err"&gt;@-----------------------------------------------------------&lt;/span&gt;


&lt;span class="err"&gt;@-----------------------------------------------------------&lt;/span&gt;
&lt;span class="na"&gt;.text&lt;/span&gt;
&lt;span class="na"&gt;.align&lt;/span&gt;  &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="na"&gt;.global&lt;/span&gt; &lt;span class="no"&gt;Exit&lt;/span&gt;
&lt;span class="na"&gt;.type&lt;/span&gt;   &lt;span class="no"&gt;Exit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="no"&gt;function&lt;/span&gt;
&lt;span class="nl"&gt;Exit:&lt;/span&gt;
    &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="nf"&gt;args&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;pretend&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;frame&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="nf"&gt;frame_needed&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;uses_anonymous_args&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

    &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="nf"&gt;Software&lt;/span&gt; &lt;span class="no"&gt;interrupt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;doing&lt;/span&gt; &lt;span class="no"&gt;the&lt;/span&gt; &lt;span class="no"&gt;syscall&lt;/span&gt;
    &lt;span class="nf"&gt;swi&lt;/span&gt; &lt;span class="no"&gt;immed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SYSCALL_ID_EXIT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="err"&gt;@&lt;/span&gt; &lt;span class="nf"&gt;Exit&lt;/span&gt; &lt;span class="no"&gt;back&lt;/span&gt; &lt;span class="no"&gt;to&lt;/span&gt; &lt;span class="no"&gt;previous&lt;/span&gt; &lt;span class="no"&gt;frame&lt;/span&gt;
    &lt;span class="nf"&gt;mov&lt;/span&gt; &lt;span class="no"&gt;pc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;lr&lt;/span&gt;
&lt;span class="na"&gt;.size&lt;/span&gt;   &lt;span class="no"&gt;Exit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;.-Exit&lt;/span&gt;
&lt;span class="err"&gt;@-----------------------------------------------------------&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/section&gt;&lt;/section&gt;&lt;section class="&amp;quot;section section1&amp;quot;" id="how-to-set-up-your-makefile"&gt;&lt;h1&gt;How to set-up your Makefile&lt;/h1&gt;
&lt;p&gt;&lt;div class="alert alert-warning "&gt;&lt;i class="fa fa-warning"&gt;&lt;/i&gt;
    TODO: Add a chart
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;First we need to find each of the files, remember the &lt;code&gt;*.S&lt;/code&gt; files are your assembly + preproccessor.&lt;/p&gt;
&lt;p&gt;Then we convert their endings to the resulting files that we want: &lt;code&gt;*.o&lt;/code&gt; files&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Kernel libraries&lt;/span&gt;
&lt;span class="nv"&gt;ASMLIB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;shell find ./kern/asm/ -name &lt;span class="s2"&gt;&amp;quot;*.S&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;CLIB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;shell find ./kern/ -name &lt;span class="s2"&gt;&amp;quot;*.c&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;$(patsubst %.c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;%.o&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;$(LIBS)) $(patsubst %.S&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;%.o&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;$(ASMLIB))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then we have the actual commands that will compile the files.&lt;/p&gt;
&lt;p&gt;Notice that the &lt;code&gt;*.S&lt;/code&gt; files only get pre-processed by gcc (using the &lt;code&gt;-E&lt;/code&gt; flag). Then they follow the standard chain to become &lt;code&gt;*.o&lt;/code&gt; files.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nf"&gt;%.s&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;%.c&lt;/span&gt;
    &lt;span class="k"&gt;$(&lt;/span&gt;CC&lt;span class="k"&gt;)&lt;/span&gt; -S &lt;span class="k"&gt;$(&lt;/span&gt;CFLAGS&lt;span class="k"&gt;)&lt;/span&gt; -o &lt;span class="nv"&gt;$@&lt;/span&gt; &lt;span class="nv"&gt;$&amp;lt;&lt;/span&gt;

&lt;span class="nf"&gt;%.o&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;%.s&lt;/span&gt;
    &lt;span class="k"&gt;$(&lt;/span&gt;AS&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;ASFLAGS&lt;span class="k"&gt;)&lt;/span&gt; -o &lt;span class="nv"&gt;$@&lt;/span&gt; &lt;span class="nv"&gt;$&amp;lt;&lt;/span&gt;

&lt;span class="nf"&gt;kern/asm/%.s&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;kern/asm/%.S&lt;/span&gt;
    &lt;span class="k"&gt;$(&lt;/span&gt;CC&lt;span class="k"&gt;)&lt;/span&gt; -E &lt;span class="k"&gt;$(&lt;/span&gt;CFLAGS&lt;span class="k"&gt;)&lt;/span&gt; -O0 -o &lt;span class="nv"&gt;$@&lt;/span&gt; &lt;span class="nv"&gt;$&amp;lt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/section&gt;</summary><category term="Real-Time (Trains)"></category><category term="assembly"></category><category term="ARM"></category></entry><entry><title>Psychology ~ Where are you going?</title><link href="//blog.saevon.ca/personal/psychology-walking/" rel="alternate"></link><updated>2014-07-03T00:00:00-04:00</updated><author><name>Saevon</name></author><id>tag://blog.saevon.ca,2014-07-03:personal/psychology-walking/</id><summary type="html">&lt;p&gt;How many times have you had to do the "sidewalk dance" where you try to shuffle out of the way of another person? Well there is a pretty simple solution.&lt;/p&gt;
&lt;section class="&amp;quot;section section1&amp;quot;" id="overview"&gt;&lt;h1&gt;Overview&lt;/h1&gt;
&lt;p&gt;Recently a friend of mine commented about something he read on reddit, people use gaze to figure out which way others are going. Now I'd been using this to avoid crowds, and even to indicate to my friends where to go next. However I realized that not many people know of this.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section1&amp;quot;" id="psychology"&gt;&lt;h1&gt;Psychology&lt;/h1&gt;
&lt;p&gt;&lt;div class="alert alert-warning "&gt;&lt;i class="fa fa-warning"&gt;&lt;/i&gt;
    No studies have been found supporting this, so treat this as pure theory and hearsay
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;When a person walks around, they will usually glance in the direction they're going. This can be used to find out where others are going, and most of us do so subconsciously. However, the real utility lies in getting through a crowded area. Anytime there are people going in the opposite direction, you can determinately look in between people, or to thier side, and they'll make room for you.&lt;/p&gt;
&lt;p&gt;Now one thing you might notice is that people who do a common courtesy (at least where I'm from), and glance into people's eyes, will be at a disadvantage. After all the other person now has no cues to tell where you'll be going.&lt;/p&gt;
&lt;/section&gt;</summary><category term="psychology"></category></entry><entry><title>Using the proper Assembler on Mac OSX</title><link href="//blog.saevon.ca/coding/using-the-proper-assembler-on-mac-osx/" rel="alternate"></link><updated>2014-06-20T00:00:00-04:00</updated><author><name>Saevon</name></author><id>tag://blog.saevon.ca,2014-06-20:coding/using-the-proper-assembler-on-mac-osx/</id><summary type="html">&lt;p&gt;The standard compiler &lt;code&gt;gcc&lt;/code&gt; for Mac OSX is actually the &lt;code&gt;clang&lt;/code&gt; compiler, this means that you need to use its assembler and linker as well. If you try to do the compilation in steps, you will notice that "&lt;code&gt;as&lt;/code&gt;" is not the clang assembler however, which causes it to break down.&lt;/p&gt;
&lt;p&gt;In this article I will discuss a simple solution to this problem.&lt;/p&gt;
&lt;section class="&amp;quot;section section1&amp;quot;" id="intro"&gt;&lt;h1&gt;Intro&lt;/h1&gt;
&lt;p&gt;&lt;div class="alert alert-info "&gt;&lt;i class="fa fa-info-circle"&gt;&lt;/i&gt;
    Jump straight to the &lt;a href="#solution"&gt;solution&lt;/a&gt;, or read about the situation ahead.
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;I was working on a microkernel &lt;code&gt;(CS 452: Real Time Programming)&lt;/code&gt;, and I needed to do my compilations with a custom compiler, assembler and linker, so I could compile for ARM. However this required me to use an older version of gcc without the &lt;code&gt;--with-as=&lt;/code&gt; flag, thus I needed to get the assembler to run as a seperate command.&lt;/p&gt;
&lt;p&gt;Enter a complication: I needed this to run tests on my local machine (Mac), as well as on those of my partners (Windows running cygwin), I also needed this to compile on a remote Linux server, which could do the necessary cross-compilation.&lt;/p&gt;
&lt;p&gt;My resulting makefile had the following basic structure.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Create the assembly file so that we can use a seperate assembler in the next step&lt;/span&gt;
&lt;span class="nf"&gt;%.s&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;%.c&lt;/span&gt;
    &lt;span class="k"&gt;$(&lt;/span&gt;CC&lt;span class="k"&gt;)&lt;/span&gt; -S &lt;span class="k"&gt;$(&lt;/span&gt;CFLAGS&lt;span class="k"&gt;)&lt;/span&gt; -o &lt;span class="nv"&gt;$@&lt;/span&gt; &lt;span class="nv"&gt;$&amp;lt;&lt;/span&gt;

&lt;span class="c"&gt;# Use out assembler to compile an object file&lt;/span&gt;
&lt;span class="nf"&gt;%.o&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;%.s&lt;/span&gt;
    &lt;span class="k"&gt;$(&lt;/span&gt;AS&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;ASFLAGS&lt;span class="k"&gt;)&lt;/span&gt; -o &lt;span class="nv"&gt;$@&lt;/span&gt; &lt;span class="nv"&gt;$&amp;lt;&lt;/span&gt;

&lt;span class="c"&gt;# Combine the object files using the linker&lt;/span&gt;
&lt;span class="nf"&gt;%.elf&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;%.o&lt;/span&gt;
    &lt;span class="k"&gt;$(&lt;/span&gt;LD&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;LDFLAGS&lt;span class="k"&gt;)&lt;/span&gt; -Map &lt;span class="nv"&gt;$*&lt;/span&gt;.map -o &lt;span class="nv"&gt;$@&lt;/span&gt; &lt;span class="nv"&gt;$*&lt;/span&gt;.o &lt;span class="k"&gt;$(&lt;/span&gt;INC&lt;span class="k"&gt;)&lt;/span&gt; -lgcc
    chmod a+r &lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;First we generate the assembly files, next we assemble the resulting files into object files. Finally we produce the elf file that will represent my Kernel.&lt;/p&gt;
&lt;p&gt;This will run properly on the linux machine, however when I try to use the same makefile to generate code locally, it fails.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section1&amp;quot;" id="solution"&gt;&lt;h1&gt;Solution&lt;/h1&gt;
&lt;p&gt;The error I get looks like this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;test_cbuf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Unknown&lt;/span&gt; &lt;span class="n"&gt;pseudo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cfi_startproc&lt;/span&gt;
&lt;span class="n"&gt;test_cbuf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Unknown&lt;/span&gt; &lt;span class="n"&gt;pseudo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cfi_def_cfa_offset&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So the assemble results from &lt;code&gt;gcc&lt;/code&gt; can't be read by the assembler?&lt;/p&gt;
&lt;p&gt;It seems the &lt;code&gt;gcc&lt;/code&gt; and the &lt;code&gt;as&lt;/code&gt; progams that Mac has by default use differing standards.&lt;/p&gt;
&lt;p&gt;The correct assembler to use uses a command like the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;clang -c -x assembler &lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;Now to solve my situation above:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I can give a different &lt;code&gt;AS = "clang -c -x assembler"&lt;/code&gt; variable to my makefile&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;But then I either need to call it that way always (a pain) or add different instructions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I can add a simple bash script that calls the code above, one that is earlier in my &lt;code&gt;$PATH&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I opted for the second solution, mostly since this seems to be a more common use-case for me.&lt;/p&gt;
&lt;/section&gt;</summary><category term="Mac OSX"></category><category term="assembler"></category><category term="clang"></category><category term="Real-Time (Trains)"></category></entry><entry><title>Review: Prison Architect</title><link href="//blog.saevon.ca/review/review-prison-architect/" rel="alternate"></link><updated>2014-01-08T00:00:00-05:00</updated><author><name>Saevon</name></author><id>tag://blog.saevon.ca,2014-01-08:review/review-prison-architect/</id><summary type="html">&lt;p&gt;Prison Architect is a game about creating and managing a prison. You get a plot of land, and slowly build up a secure facility, getting money from the government for storing prisoners, and from grants (quests).&lt;/p&gt;
&lt;section class="&amp;quot;section section2&amp;quot;" id="review"&gt;&lt;h2&gt;Review&lt;/h2&gt;
&lt;p&gt;&lt;div class="alert alert-warning "&gt;&lt;i class="fa fa-warning"&gt;&lt;/i&gt;
    This game is in Alpha, thus many of the features I recommend and complain about could be planned for.
    This game was pretty fun, don't drop it just cause of this review
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Prison Architect was a pretty fun game to play, though I had some trouble at first, I slowly figured out how to make money and actually expand my prison.&lt;/p&gt;
&lt;p&gt;The game itself involves mostly planning out your building and the rooms inside of it. So it lives up to its name as you really are an architect. There is of course more, such as planning out a regime for the prisoners, hiring staff, and setting up patrols, but the main focus is on design.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section2&amp;quot;" id="gameplay"&gt;&lt;h2&gt;Gameplay&lt;/h2&gt;
&lt;section class="&amp;quot;section section3&amp;quot;" id="staff"&gt;&lt;h3&gt;Staff&lt;/h3&gt;
&lt;p&gt;Controlling your staff is still very raw, they just walk around doing whatever tasks they should do with no input from you. The only staff member you can really control is the Guard. A guard can be told to patrol, or to hang out around a specific room, or just to go somewhere.&lt;/p&gt;
&lt;p&gt;The main problem I saw with the staff, was that it was very hard to make multiple Cell Blocks. I tried to make a seperate High Security facility, but all of a sudden all my staff wanted to use its Staff Room to take breaks, "Oh look it has better wi-fi??". This also meant that some of my cooks decided to take over the Kitchen and my other one was understaffed, and other such problems.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="tutorial-descriptions"&gt;&lt;h3&gt;Tutorial &amp;amp; Descriptions&lt;/h3&gt;
&lt;p&gt;The Tutorial was pretty small, and had you start with an already running prison, this meant that I missed out on a lot of the requirements for how to actually build my prison, and instead learned the controls. Instead &lt;em&gt;Tips&lt;/em&gt; might have been more useful while I was building my prison from scratch.&lt;/p&gt;
&lt;p&gt;While playing the actual game I found most of the object to be completely useless, as I had no idea what they do. I still have no Idea whether people used the TVs I installed, or if they did nothing. The game needs a more sims like interface, you can already see the different criteria for a prisoner's happiness, the in game objects just need a "Recreation++, Energy&amp;ndash;" that tells you the result of a prisoner using the object.&lt;/p&gt;
&lt;p&gt;Some rooms actually have requirements for their use, such as a workshop needing 2 types of tables (a Saw and Press), and you can't tell how much of each you'll need in the room. A Kitchen has 3 things it needs, and I still am not sure how to make my cooks support more people. Thus the game needs an expanded information window for objects.&lt;/p&gt;
&lt;p&gt;Similarily I filled up some rooms with useless looking items, why is a filing cabinet needed for an office? what happens if I install more? There should be some benefit, more importantly do prisoners use the chairs, sofas and tables that normally go for staff?&lt;/p&gt;
&lt;p&gt;Looking at utilities it was sometimes hard to work with overlapping water and electricity cables/pipes. Deleting just one was especially hard during such times. Also it wasn't obvious how much electricity/water an object would use, and big vs small pipes should also have a number indicating the maximum they can carry. Electricity also has 2 types of requirements, a &lt;em&gt;small&lt;/em&gt; cable, aka if its close enough to the electricity it automatically gets connected, and a &lt;em&gt;big&lt;/em&gt; cable, aka it needs a cable to connect to it. It would be nice to know which things need what, though as far as I can tell only lights need &lt;em&gt;small&lt;/em&gt; ones. This actually confused me for a bit as CCTV cameras seemed to work, but I guess I just coincidentally put them next to &lt;em&gt;big&lt;/em&gt; cables.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="cell-blocks"&gt;&lt;h3&gt;Cell Blocks&lt;/h3&gt;
&lt;p&gt;As mentioned earlier it was hard to divide the place into cell blocks, I could limit areas to staff only, or to max security, but my staff didn't care. So while I wanted a block to have next to no staff, in case of riots I close it down and call in the Riot squad, thus losing no people, I couldn't.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="prison-capacity"&gt;&lt;h3&gt;Prison Capacity&lt;/h3&gt;
&lt;p&gt;In the game you can either have your prison open for new prisoners, or not. It was annoying to have to open then close the prison, as I specifically made the place for 40 people. I couldn't just say my capacity is 40, then have prisoners come in, or better say the prison is for 30 Med risk, 5 Low risk and 5 High risk.&lt;/p&gt;
&lt;p&gt;This meant that if my prison was running smoothly, and I needed some prisoners I would turn it on, then go start building my new wing, and forget to turn it back off! Thus I would be over capacity, I knew it was too late, a riot was about to happen as the prisoners near starved. But I could do nothing, it would have been nice to ship people back out.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="rooms"&gt;&lt;h3&gt;Rooms&lt;/h3&gt;
&lt;p&gt;The game allows for a very nice variaty of rooms, I felt pretty satisfied by them. While more might be nice, it had all I really needed for a prison.&lt;/p&gt;
&lt;p&gt;The only real problem I saw with rooms was the minimum size requirements, 5x5 for a holding cell? why not 4*7. Maybe a 25m&lt;sup&gt;2&lt;/sup&gt; limit instead?&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="riots"&gt;&lt;h3&gt;Riots&lt;/h3&gt;
&lt;p&gt;Unlike some of the other people online, I had no problem keeping the number of riots down, and once I got a base prison working riots only happened when I screwed up.&lt;/p&gt;
&lt;p&gt;However I'm not sure why, but the prisoners just ran around breaking stuff and killing guards, not trying to escape? Perhaps this was an AI thing though as my prison was sort of confusingly layed out (all the better to trap people in).&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;</summary><category term="prison architect"></category><category term="game"></category></entry><entry><title>Mystic Eye Collection Goggles</title><link href="//blog.saevon.ca/roleplaying/mystic-eye-collection-goggles/" rel="alternate"></link><updated>2013-11-20T00:00:00-05:00</updated><author><name>Saevon</name></author><id>tag://blog.saevon.ca,2013-11-20:roleplaying/mystic-eye-collection-goggles/</id><summary type="html">&lt;p&gt;&lt;strong&gt;Magical Item:&lt;/strong&gt; A cursed pair of eye goggles that is used to steal the eyes of creatures. It doubles as a torture device due to its method of extracting them.&lt;/p&gt;
&lt;section class="&amp;quot;section section3&amp;quot;" id="summary"&gt;&lt;h3&gt;Summary&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Attacks creatures within &lt;strong&gt;30 feet&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1/rnd&lt;/strong&gt; do a &lt;strong&gt;Ref 20&lt;/strong&gt; or be forced to wear them.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Concentration 16&lt;/strong&gt; or launch an eye every &lt;strong&gt;10rnds&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;When shapeshifting with eyes, you get its abilities.&lt;/li&gt;
&lt;li&gt;Takes up the &lt;strong&gt;Headband&lt;/strong&gt; slot.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cursed Item&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="extraction"&gt;&lt;h3&gt;Extraction&lt;/h3&gt;
&lt;p&gt;Any creature wearing these goggles will see red marks appearing over everything they focus on. The more they focus on something the brighter the mark on it. The less they focus, the darker (or non-existent) the mark.&lt;/p&gt;
&lt;p&gt;If a creature focuses on something for too long they feel some pressure build up behind their eyes, until, the eye is popped out of its socket, and launched towards the targeted mark.&lt;/p&gt;
&lt;p&gt;When an eye is launched, a hard protective case is build up around it in the shape of a cylindrical glass container, a &lt;em&gt;Stasis Glass&lt;/em&gt;. The eye is held in a stasis field which prevents any damage unless the container itself is opened.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="how-its-used"&gt;&lt;h3&gt;How it's Used&lt;/h3&gt;
&lt;p&gt;The Goggles are attracted to any creature with eyes that is within 1 size category of its size. When within &lt;strong&gt;30 feet&lt;/strong&gt; of such a creature they fly at their eyes, attaching themselves. The target gets a &lt;strong&gt;Reflex Save (DC: 20)&lt;/strong&gt; to block, though the goggles will keep trying &lt;strong&gt;1/rnd&lt;/strong&gt;. &lt;strong&gt;Every 10rnds&lt;/strong&gt; hereafter the target will need to do a &lt;strong&gt;concentration check (DC: 16)&lt;/strong&gt; to not focus too much (and launch 1 eye).&lt;/p&gt;
&lt;p&gt;The Goggles are considered a &lt;strong&gt;Headband&lt;/strong&gt; magical item, thus preventing you from using any goggles, eye glasses or other such items.&lt;/p&gt;
&lt;p&gt;The Goggles are considered a cursed item for the sake of getting them off, thus &lt;strong&gt;Remove Curse&lt;/strong&gt; will make them fall off, after which they will take &lt;strong&gt;1d10&lt;/strong&gt; rnds to recover (launching one of their eyes on failure).&lt;/p&gt;
&lt;p&gt;The Goggles are usually encountered as a stranded item, acting like a trap. However in reality these Goggles are used to collect Mystic Eyes, thus there is a way to control them. The Goggles are created with a small container to hold them. The container has an arcane symbol to press when you need to stop the goggles from attacking things, and another to get them to start up again.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="stasis-glass"&gt;&lt;h3&gt;Stasis Glass&lt;/h3&gt;
&lt;p&gt;Any eye in a Stasis Glass can't get any damage until the container breaks. This makes it the best way to store eyes until you have a need for them.&lt;/p&gt;
&lt;p&gt;Due to a quirk in its production any shapeshifting while holding an eye grants the user that eye. This takes up the &lt;strong&gt;Headband&lt;/strong&gt; slot, preventing any other magic items from functioning. You can have as many eye changes as is available to your current form, thought this is mandatory. Using this you can change eye colour, shape and other such details. If you hold more eyes than your form has, you get to choose which ones work (or roll for randomness).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hardness:&lt;/strong&gt; 15&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HP:&lt;/strong&gt; 20&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Aura:&lt;/strong&gt; Strong Transmutation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;When the Stasis glass is broken, it disappears, but the contents fall out (and are probably ruined)&lt;/p&gt;
&lt;/section&gt;</summary><category term="magic-item"></category><category term="D&amp;D"></category></entry><entry><title>Review: Game Dev Tycoon</title><link href="//blog.saevon.ca/review/review-game-dev-tycoon/" rel="alternate"></link><updated>2013-10-04T00:00:00-04:00</updated><author><name>Saevon</name></author><id>tag://blog.saevon.ca,2013-10-04:review/review-game-dev-tycoon/</id><summary type="html">&lt;p&gt;Game Dev Tycoon is an interesting game that puts the player into the shoes of a game developer from the 80's. Re-invent your favourite games, combat piracy, or even embrace it. Its a unique game due to its differing gameplay between the legit and pirated versions.&lt;/p&gt;
&lt;section class="&amp;quot;section section2&amp;quot;" id="review"&gt;&lt;h2&gt;Review&lt;/h2&gt;
&lt;p&gt;A quick warning, this review is written just before the move to the 3rd office, and thus might not fully reflect all the game options. I just felt it was best to write this while its fresh in my mind.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.greenheartgames.com/2013/04/29/what-happens-when-pirates-play-a-game-development-simulator-and-then-go-bankrupt-because-of-piracy/"&gt;See this link for details about the piracy aspect.&lt;/a&gt;&lt;/p&gt;
&lt;section class="&amp;quot;section section3&amp;quot;" id="controls"&gt;&lt;h3&gt;Controls&lt;/h3&gt;
&lt;p&gt;The game uses a menu for most of its controls, you click on the screen and a menu opens up. I found this a bit unweldy, as sometimes this meant it went above the other icons at the top, making them hard to see.&lt;/p&gt;
&lt;p&gt;There was also a minor bug that made me sometimes manipulate a menu in the background while I was on the "New Game" window. I'd be trying to click to type the game name, but be clicking on menu options.&lt;/p&gt;
&lt;p&gt;One suggestion which I thought would be nice, would be to highlight staff when you hover over them, that would make it more obvious that there are seperate menus. Thought it was pretty clear after a click or two.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="gameplay"&gt;&lt;h3&gt;Gameplay&lt;/h3&gt;
&lt;p&gt;I found the game was a bit confusing, I was always just guessing what options to choose, and sometimes the game I imagined and the game that I apparantly made didn't match.&lt;/p&gt;
&lt;p&gt;The game creation menu was nice, but sometimes I wish I could cross some genres such as Zombie/Horror.&lt;/p&gt;
&lt;p&gt;The three stages were also a little confusing, I had already made tons of games by this point, yet the requirements still eluded me. If I was actually making games, after that many games and game reports I would have long since compiled the effects of each stage on the topics and genres. While I sometime get hints saying "+++?" it just didn't seem like I was getting enough for my efforts, sure I could have actually written reports myself, but this is a casual game to me.&lt;/p&gt;
&lt;p&gt;I also found the "Design" and "Technology" bubbles to be confusing, I had no idea what it meant to get better points there, except that it was probably good. Nor how each staff member and choice could effect it. My characters had stats, but I couldn't figure out why I'd care for that very reason.&lt;/p&gt;
&lt;p&gt;Research was pretty well done, I found that I could mostly guess when I'd get lots of research points, it was intuitive.&lt;/p&gt;
&lt;p&gt;When choosing projects to work on, I felt I should have more control over who does what, while I could train, and research individually, it would be nice to do that as a group as well. Conversely I felt that my staff could produce multiple games, as I could do them by myself at the start, especially when I really needed money, and didn't mind going red to get money faster&lt;/p&gt;
&lt;p&gt;On a similar topic, the medium game didn't tell me my team would have been swamped and incapable of finishing it without giving 130% each.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="graphics"&gt;&lt;h3&gt;Graphics&lt;/h3&gt;
&lt;p&gt;I found the graphics to be to my liking, the cartoonish sprites, and backgrounds to be very fitting. They didn't take too much of the focus, making you see the whole office as important, rather than focusing on your individual avatar.&lt;/p&gt;
&lt;p&gt;Speaking of the avatar, I found there wasn't too much options for making an avatar, I think hair style and colour could have been seperated. Otherwise I had all the options I needed to get someone I liked.&lt;/p&gt;
&lt;p&gt;The time bar at the top left was not very well done either, as I found the numbers just faded away and were unimportant to me. If it was more obvious what year it was (1980 + the given year I guess) it might have been nice, especially when I was talking to my friends about how I released these cool games in (what year would this be again?). I remember one conversation vividly, where my friend stated, "maybe the world isn't ready for your ground breaking Zombie/Sim :P", and I took forever to figure out what year that was in real time. The other time values could have been better shown as well.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="sounds"&gt;&lt;h3&gt;Sounds&lt;/h3&gt;
&lt;p&gt;I found the sounds were okay, they were reminiscent of the much older games I liked to play, and totally fit in with the time and feel of the game. However there wasn't much more about them, thus I can see how the developers took their own gameplay to heart, not putting much effort into the sounds.&lt;/p&gt;
&lt;p&gt;Overall I did like them, and feel that the game really didn't need much effort in this category.&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;section class="&amp;quot;section section2&amp;quot;" id="conclusion"&gt;&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This game was a very fun game, however I still felt there was room for improvement. I wish the best of luck to the developers of this game, and hope their sequel or expansion is awesome.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section2&amp;quot;" id="reference"&gt;&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.greenheartgames.com/2013/04/29/what-happens-when-pirates-play-a-game-development-simulator-and-then-go-bankrupt-because-of-piracy/"&gt;Piracy in a game dev game!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;</summary><category term="game dev tycoon"></category><category term="game"></category><category term="Greenheart Games"></category></entry><entry><title>Python Virtual Environments and PIP</title><link href="//blog.saevon.ca/coding/python-virtual-environments-and-pip/" rel="alternate"></link><updated>2013-07-12T00:00:00-04:00</updated><author><name>Saevon</name></author><id>tag://blog.saevon.ca,2013-07-12:coding/python-virtual-environments-and-pip/</id><summary type="html">&lt;p&gt;virtualenv is a pretty awesome tool for any python user, however it is often too easy to accidentally install new packages into the wrong place. Here I show you how to separate your system packages and that of your project environments.&lt;/p&gt;
&lt;section class="&amp;quot;section section1&amp;quot;" id="intro"&gt;&lt;h1&gt;Intro&lt;/h1&gt;
&lt;p&gt;Jump "straight" to the &lt;a href="#Syspip"&gt;Syspip&lt;/a&gt; section if you know all about python packaging and virtualenv.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section1&amp;quot;" id="virtualenvwrapper"&gt;&lt;h1&gt;virtualenvwrapper&lt;/h1&gt;
&lt;p&gt;This is a really useful tool, even if it adds binaries with amazingly long names. It lets you easily and quickly list, add, and switch to a virtualenv.&lt;/p&gt;
&lt;p&gt;I don't usually need all the many options this script provides, and would also prefer for it to be easier to combine the virtualenvwrapper's and git's PS1 prompt changes.&lt;/p&gt;
&lt;section class="&amp;quot;section section3&amp;quot;" id="changing-environments"&gt;&lt;h3&gt;Changing Environments&lt;/h3&gt;
&lt;p&gt;To change environments is pretty easy, you just use the &lt;code&gt;workon&lt;/code&gt; command. This works whether you have a currently active environment or not.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;workon &lt;span class="nv"&gt;$env_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To deactivate the current environment you use the &lt;code&gt;deactivate&lt;/code&gt; command, just like normal. Though personally I though workoff was more obvious.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;workoff&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;deactivate
&lt;/pre&gt;&lt;/div&gt;


&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="tab-completion"&gt;&lt;h3&gt;Tab Completion!&lt;/h3&gt;
&lt;p&gt;When using the &lt;code&gt;workon&lt;/code&gt; command you can tab complete to see the list of all the environments you have.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="addremove-environments"&gt;&lt;h3&gt;Add/Remove Environments&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Add a new environment&lt;/span&gt;
mkvirtualenv &lt;span class="nv"&gt;$env_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Remove an environment&lt;/span&gt;
rmvirtualenv &lt;span class="nv"&gt;$env_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/section&gt;&lt;/section&gt;&lt;section class="&amp;quot;section section1&amp;quot;" id="syspip"&gt;&lt;h1&gt;Syspip&lt;/h1&gt;
&lt;p&gt;Heres where stuff gets interesting. To prevent mistakes while installing packages, I've added the following things to my bash startup scripts (&lt;code&gt;.bashrc&lt;/code&gt;, &lt;code&gt;.bash_aliases&lt;/code&gt;, etc.)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# .bashrc&lt;/span&gt;

&lt;span class="nb"&gt;source&lt;/span&gt; /usr/local/bin/virtualenvwrapper.sh

&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;WORKON_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.environments
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PIP_VIRTUALENV_BASE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;WORKON_HOME

&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PIP_REQUIRE_VIRTUALENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;First notice that we set &lt;code&gt;PIP_REQUIRE_VIRTUALENV&lt;/code&gt;, this ensures that pip &lt;em&gt;will not&lt;/em&gt; run without an active virtual environment.&lt;/p&gt;
&lt;p&gt;Second, do remember to set &lt;code&gt;PIP_VIRTUALENV_BASE&lt;/code&gt;, since that is what pip uses to tell if you have an environment active. (AFAIK)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# .bash_aliases&lt;/span&gt;

&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;SYSTEM_PIP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;which pip&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;function &lt;/span&gt;syspip &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;PIP_REQUIRE_VIRTUALENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt; sudo &lt;span class="nv"&gt;$SYSTEM_PIP&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;$@&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here we first find which version of pip we use, then add a new way of using the global pip binary. Now you have 2 ways of installing a package, each of which always installs to the expected location.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To install &lt;strong&gt;only&lt;/strong&gt; for the currently active environment, (or fail if it doesn't find one)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install &lt;span class="nv"&gt;$package&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To install &lt;strong&gt;only&lt;/strong&gt; globally&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;syspip install &lt;span class="nv"&gt;$package&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class="alert alert-warning "&gt;&lt;i class="fa fa-warning"&gt;&lt;/i&gt;
    Don't forget to load &lt;code&gt;.bash_aliases&lt;/code&gt; before you activate any environments, otherwise &lt;code&gt;syspip&lt;/code&gt; might not work as advertised.
&lt;/div&gt;&lt;/p&gt;
&lt;/section&gt;</summary><category term="python"></category><category term="virtualenv"></category><category term="pip"></category></entry><entry><title>Review: Alex Rider</title><link href="//blog.saevon.ca/review/review-alex-rider/" rel="alternate"></link><updated>2013-07-08T00:00:00-04:00</updated><author><name>Saevon</name></author><id>tag://blog.saevon.ca,2013-07-08:review/review-alex-rider/</id><summary type="html">&lt;p&gt;Alex Rider is a story about a kid learning the truth about his parent. Having been secretly trained as a spy from birth, he's coerced into working for the MI6 and always ends up saving the world from unknown catastrophy.&lt;/p&gt;
&lt;section class="&amp;quot;section section2&amp;quot;" id="review"&gt;&lt;h2&gt;Review&lt;/h2&gt;
&lt;p&gt;It has been a while since I last read books from the Alex Rider series, but I can tell you they're worth re-reading.&lt;/p&gt;
&lt;p&gt;The general plot follows Alex as he gets into difficult situations and uses his wits, training, and cool gadgets to escape hazards. He often not only triumphs, but comes out ahead, finding some new source of information which helps him uncover the final evil plan.&lt;/p&gt;
&lt;p&gt;The series is quite easy to be immersed in, and nicely portrays the problems and challenges a spy might be facing. Some potential inaccuracy does exist, however it is outshadowed by the greater benefit it usually presents to the overall story. You can see that the author did his research, and consulted experts in quite a few fields when writing his books.&lt;/p&gt;
&lt;p&gt;One of the main characteristics of this series is that Alex does not often wish to follow along with every Secret Service's requests for help. This is very realistic portrayal of the most likely reaction of a kid put in the situation he faces, and while I would prefer not to see him being coerced into these situations, it makes Alex seem much more normal and provides more believability to the story.&lt;/p&gt;
&lt;p&gt;The evil villains of the Alex Rider universe do follow the standard James Bond procedure, but all seem to have unique quirks that make them much more. Not all of them would blab out their evil plan when Alex is caught and about to be killed, though most of them do end up leaving him to die.&lt;/p&gt;
&lt;p&gt;Psychology plays a big part in the series, as we see Alex get hurt mentally with everything he goes through, and even though he seems to get back up a little too resiliently, it makes reading the books all the more accurate and enjoyable.&lt;/p&gt;
&lt;/section&gt;</summary><category term="alex rider"></category><category term="book"></category></entry><entry><title>WebRTC with JsSIP and Asterisk</title><link href="//blog.saevon.ca/coding/webrtc-with-jssip-and-asterisk/" rel="alternate"></link><updated>2013-07-04T00:00:00-04:00</updated><author><name>Saevon</name></author><id>tag://blog.saevon.ca,2013-07-04:coding/webrtc-with-jssip-and-asterisk/</id><summary type="html">&lt;p&gt;Recently I've been trying to get a web phone up and running, my only real requirement was to use Asterisk. So I decided to go with the following technology stack, JsSIP, Chrome and Asterisk.&lt;/p&gt;
&lt;section class="&amp;quot;section section2&amp;quot;" id="browsers"&gt;&lt;h2&gt;Browsers&lt;/h2&gt;
&lt;p&gt;I've only tried to use chrome so far, though I've read that Firefox is currently WebRTC capable as well.&lt;/p&gt;
&lt;p&gt;Chrome on OSX seems to work fine (version 27.0.1453.116).&lt;/p&gt;
&lt;p&gt;Chrome on Ubuntu had problems until I updated to a &lt;a href="http://www.ubuntuupdates.org/package/google_chrome/stable/main/base/google-chrome-beta"&gt;Beta version&lt;/a&gt; (version 28.0.1500.52 beta)&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section2&amp;quot;" id="asterisk"&gt;&lt;h2&gt;Asterisk&lt;/h2&gt;
&lt;p&gt;Asterisk had quite a few requirements before I could get it to work with WebRTC, &lt;a href="https://wiki.asterisk.org/wiki/display/AST/Asterisk+WebRTC+Support" title="Asterisk and WebRTC"&gt;see this page for details&lt;/a&gt;.&lt;/p&gt;
&lt;section class="&amp;quot;section section4&amp;quot;" id="building"&gt;&lt;h4&gt;Building&lt;/h4&gt;
&lt;p&gt;You will likely need to rebuild Asterisk as WebRTC requires a SRTP libraries, which aren't included by default.&lt;/p&gt;
&lt;p&gt;You will need the following libraries on the machine you use to recompile Asterisk:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;libssl-dev&lt;/li&gt;
&lt;li&gt;libsrtp0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you have these libraries installed, you will also need to enable two Asterisk resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;res_srtp.so&lt;/li&gt;
&lt;li&gt;res_http_websocket.so&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now you can recompile.&lt;/p&gt;
&lt;p&gt;The resulting build might also need a few configuration changes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;asterisk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
  &lt;span class="o"&gt;|--&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;
  &lt;span class="o"&gt;|--&lt;/span&gt; &lt;span class="n"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;
  &lt;span class="o"&gt;|--&lt;/span&gt; &lt;span class="n"&gt;sip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;http.conf&lt;/code&gt;
    Ensure the following options are set&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;bindaddr&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;
&lt;span class="n"&gt;bindport&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8088&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;modules.conf&lt;/code&gt;
    you must load res_http_websocket.so before chan_sip.so&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;sip.conf&lt;/code&gt;
    Any users that you want to allow WebRTC for you need:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;encryption&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;avpf&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;yes&lt;/span&gt;
&lt;span class="n"&gt;transport&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ws&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;wss&lt;/span&gt;
&lt;span class="n"&gt;icesupport&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Adding &lt;strong&gt;encryption=yes&lt;/strong&gt; to any non WebRTC phones might make them break, so be careful.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;div class="alert alert-info "&gt;&lt;i class="fa fa-info-circle"&gt;&lt;/i&gt;
    Remember to restart Asterisk once you're done.
&lt;/div&gt;&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;section class="&amp;quot;section section2&amp;quot;" id="jssip"&gt;&lt;h2&gt;JsSIP&lt;/h2&gt;
&lt;p&gt;JsSIP &lt;a href="http://jssip.net/" title="JsSip"&gt;JsSIP&lt;/a&gt; was quite easy to use, however it wasn't without its set of problems. If you want to do a quick test yourself, check out the &lt;a href="https://jssip.tryit.net" title="JsSip Tryit"&gt;JsSIP Tryit&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;My main problem was that their script didn't seem to connect with asterisk properly, though I've already forgotten the reason (will update if I do). To solve this I updated to the dev version of JsSIP, which I download from the &lt;a href="https://jssip.tryit.net" title="JsSip Tryit"&gt;JsSIP Tryit&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;Afterwards I would also have jssip error out when I tried to type in an invalid target, I patched it quickly removing the potentially erroneous code. I didn't know enough about their side of the problem, so I have no way of knowing if this is a correct fix.&lt;/p&gt;
&lt;p&gt;&lt;div class="alert alert-warning "&gt;&lt;i class="fa fa-warning"&gt;&lt;/i&gt;
    I've included the patch below, use it at your own risk.
&lt;/div&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gh"&gt;Index: /static/js/jssip-devel.js&lt;/span&gt;
&lt;span class="gh"&gt;===================================================================&lt;/span&gt;
&lt;span class="gd"&gt;--- /static/js/jssip-devel.js&lt;/span&gt;
&lt;span class="gi"&gt;+++ /static/js/jssip-devel.js&lt;/span&gt;
&lt;span class="gu"&gt;@@ -3372,5 +3372,10 @@&lt;/span&gt;
         console.log(LOG_PREFIX +&amp;#39;ICE candidate received: &amp;#39;+ e.candidate.candidate);
       } else {
&lt;span class="gd"&gt;-        self.onIceCompleted();&lt;/span&gt;
&lt;span class="gi"&gt;+       // PATCH: (saevon) Fixes bug with the code crashing at this step.&lt;/span&gt;
&lt;span class="gi"&gt;+       // since: neither createOffer nor createAnswer get called if you&lt;/span&gt;
&lt;span class="gi"&gt;+       // had an &amp;quot;Invalid Target&amp;quot;&lt;/span&gt;
&lt;span class="gi"&gt;+       // Thus the method doesn&amp;#39;t get added yet&lt;/span&gt;
&lt;span class="gi"&gt;+       if (self.onIceCompleted) {&lt;/span&gt;
&lt;span class="gi"&gt;+           self.onIceCompleted();&lt;/span&gt;
&lt;span class="gi"&gt;+       }&lt;/span&gt;
       }
     };
&lt;/pre&gt;&lt;/div&gt;


&lt;/section&gt;&lt;section class="&amp;quot;section section2&amp;quot;" id="conclusion"&gt;&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;WebRTC is clearly still a work in progress, and I hope it gets polished up nicely for when I next wish to use it.&lt;/p&gt;
&lt;hr /&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section2&amp;quot;" id="reference"&gt;&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jssip.net/" title="JsSip"&gt;JsSIP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jssip.tryit.net" title="JsSip Tryit"&gt;JsSip Tryit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.asterisk.org/wiki/display/AST/Asterisk+WebRTC+Support" title="Asterisk and WebRTC"&gt;Asterisk and WebRTC&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/section&gt;</summary><category term="webrtc"></category><category term="jssip"></category><category term="javascript"></category><category term="asterisk"></category></entry><entry><title>Hello World!</title><link href="//blog.saevon.ca/personal/hello-world/" rel="alternate"></link><updated>2013-07-03T00:00:00-04:00</updated><author><name>Saevon</name></author><id>tag://blog.saevon.ca,2013-07-03:personal/hello-world/</id><summary type="html">&lt;p&gt;Welcome to my Blog!&lt;/p&gt;
&lt;p&gt;So I've finally decided to get myself a blog, after seeing a few options I decided to go with Jekyll and Github Pages.&lt;/p&gt;
&lt;section class="&amp;quot;section section2&amp;quot;" id="purpose"&gt;&lt;h2&gt;Purpose&lt;/h2&gt;
&lt;p&gt;I feel this blog could combine most of my passions, coding, movies, and anything else I feel like blogging about. To that end my goal is to separate the main page into multiple post groups. Each group would let you see new posts from that category.&lt;/p&gt;
&lt;p&gt;As I add more topics I will update this post.&lt;/p&gt;
&lt;section class="&amp;quot;section section4&amp;quot;" id="coding"&gt;&lt;h4&gt;Coding&lt;/h4&gt;
&lt;p&gt;This would list any CS related topics, and though the title is "Coding" it would include algorithms and other such theoretical topics.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section4&amp;quot;" id="media"&gt;&lt;h4&gt;Media&lt;/h4&gt;
&lt;p&gt;This would be a conglomeration of any movies, books, and other such topics. Mostly this will compose of reviews.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section4&amp;quot;" id="rant"&gt;&lt;h4&gt;Rant&lt;/h4&gt;
&lt;p&gt;Miscellaneous talks will go here&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;section class="&amp;quot;section section2&amp;quot;" id="conclusion"&gt;&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;&lt;div class="alert alert-success "&gt;&lt;i class="fa fa-noicon"&gt;&lt;/i&gt;
    &lt;strong&gt;Thank you&lt;/strong&gt; for reading this far
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;Expect to see many changes for the next months as I customize this blog and personalize as much as I can.&lt;/p&gt;
&lt;/section&gt;</summary><category term="rant"></category></entry></feed>