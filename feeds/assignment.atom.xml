<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Saevon.ca</title><link href="//blog.saevon.ca/" rel="alternate"></link><link href="/feeds/assignment.atom.xml" rel="self"></link><id>//blog.saevon.ca/</id><updated>2013-06-11T00:00:00-04:00</updated><entry><title>CS 452: Kernel 3</title><link href="//blog.saevon.ca/personal/k-3/" rel="alternate"></link><updated>2013-06-11T00:00:00-04:00</updated><author><name>Saevon</name></author><id>tag://blog.saevon.ca,2013-06-11:personal/k-3/</id><summary type="html">&lt;hr /&gt;
&lt;div class="names-block"&gt;
&lt;div class="names-block-person" markdown="1"&gt;

&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Serghei Filippov&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;Student ID&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;20390471&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="names-block-person"&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Anton Pravdin&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;Student ID&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;20378263&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="names-block-person"&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Steven Chen&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;Student ID&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;20381661&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;hr /&gt;
&lt;section class="&amp;quot;section section1&amp;quot;" id="overview"&gt;&lt;h1&gt;1. Overview&lt;/h1&gt;
&lt;p&gt;This program is a basic kernel created for the ARM920T processor. It supports some basic system calls, multiple (non-preemptive) concurrent usertasks. With this, you can schedule user programs to run with a priority.&lt;/p&gt;
&lt;p&gt;There is now a main menu with which a user can now control which programs are run, one of which is the K3 user program. For testing purposes the user is not limited to executing only one program at a time. Note: some of the test programs are designed to utilize as much of the system resources as possible, such as the forkbomb or spawner scripts.&lt;/p&gt;
&lt;hr /&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section1&amp;quot;" id="docs"&gt;&lt;h1&gt;2. Documentation&lt;/h1&gt;
&lt;section class="&amp;quot;section section3&amp;quot;" id="syscalls"&gt;&lt;h3&gt;2.1 Syscalls&lt;/h3&gt;
&lt;p&gt;The following syscalls were added to the kernel&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;AwaitEvent(int event_type)&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Blocks the task until the event defined by &lt;code&gt;event_type&lt;/code&gt; happens.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;The delay syscalls implement &lt;code&gt;ticks&lt;/code&gt; which represent a &lt;code&gt;10ms&lt;/code&gt; time period within the kernel.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;Delay(time_t ticks)&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Blocks the task for a specific number of ticks specified by the &lt;code&gt;ticks&lt;/code&gt; argument.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;DelayUntil(time_t ticks)&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Blocks the task until a specific time specified by the &lt;code&gt;ticks&lt;/code&gt; argument&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;The following extra system calls were also added for convinience.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;Wait(tid_t tid)&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Blocks the task until the specified task has died.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;Halt( )&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Halts the system immediately.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;Assert( msg, function, line )&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Prints an assert message, then halts the system. This means user programs won't get fragmented assertion prints&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;UnregisterAs(char *name)&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Unregister a service from the nameserver. Uses tid to validate the request.&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;ForceUnregisterAs(char *name)&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Forcefully remove a registered service from the nameserver. (Disregard who the service belongs to)&lt;/dd&gt;
&lt;dd&gt;This syscall was included to make repetitive runs of certain user tests possible.&lt;/dd&gt;
&lt;/dl&gt;
&lt;hr /&gt;
&lt;/section&gt;&lt;/section&gt;&lt;section class="&amp;quot;section section1&amp;quot;" id="3-design-technical-details"&gt;&lt;h1&gt;3. Design &amp;amp; Technical Details&lt;/h1&gt;
&lt;section class="&amp;quot;section section3&amp;quot;" id="31-structures-algorythms"&gt;&lt;h3&gt;3.1 Structures &amp;amp; Algorythms&lt;/h3&gt;
&lt;section class="&amp;quot;section section4&amp;quot;" id="311-ordered-linked-list"&gt;&lt;h4&gt;3.1.1 Ordered Linked List&lt;/h4&gt;
&lt;p&gt;To store the list of tasks that are waiting on a &lt;code&gt;delay&lt;/code&gt; or a &lt;code&gt;delay_until&lt;/code&gt; we use an &lt;b&gt;ordered link list&lt;/b&gt;. We predefine a number of nodes equal to the amount of tasks descriptors available at one time so that we know every task can be waiting. We decided to use a linear runtime insert so that we could ensure our resulting list will be sorted. We do this so that we can have a faster read because we will have to check to see if anything needs to be replied to every tick while we only insert it once and read only the top items.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section4&amp;quot;" id="312-circular-buffer"&gt;&lt;h4&gt;3.1.2 Circular Buffer&lt;/h4&gt;
&lt;p&gt;A Circular buffer has been added, this is for future usage.&lt;/p&gt;
&lt;p&gt;It has been created as a circular linked list, with the standard circular buffer functions. With the circular buffer, we can ensure the space gets reused properly. Also you can now use the standard overwriting property of a circular bufer to nsure the array only has N elements, overwritting the oldest one. This was (and can be) used to display things like the latest N sensor updates.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section4&amp;quot;" id="313-linked-list"&gt;&lt;h4&gt;3.1.3 Linked List&lt;/h4&gt;
&lt;p&gt;We re-used our linked list structure to hold the list of tasks waiting on each specific event.&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="32-kernel"&gt;&lt;h3&gt;3.2 Kernel&lt;/h3&gt;
&lt;section class="&amp;quot;section section4&amp;quot;" id="321-hardware-interrupts"&gt;&lt;h4&gt;3.2.1 Hardware Interrupts&lt;/h4&gt;
&lt;p&gt;The hardware interrupt is very similar to our current context switch. We decided to keep the two context switches in seperate functions for now even though they share some code.&lt;/p&gt;
&lt;p&gt;When a hardware interrupt happens:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We jump to the irq_enter function&lt;/li&gt;
&lt;li&gt;We store the user state exactly as the swi_enter does&lt;ul&gt;
&lt;li&gt;Since we use the same code to load, this must be done identically&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;We save the link register&lt;/li&gt;
&lt;li&gt;We store a constant syscall id &lt;code&gt;SYSCALL_ID_IRQ&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;So our kernel knows that it shouldn't do any system call stuff&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Reload the kernel as normal&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At the end of the &lt;code&gt;activate&lt;/code&gt; function we now load the user &lt;code&gt;PC&lt;/code&gt; and &lt;code&gt;CPSR&lt;/code&gt; at the same time to ensure that the user's stack is properly loaded and saved.&lt;/p&gt;
&lt;hr /&gt;
&lt;/section&gt;&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="33-user-tasks"&gt;&lt;h3&gt;3.3 User Tasks&lt;/h3&gt;
&lt;section class="&amp;quot;section section4&amp;quot;" id="331-clock-server-and-notifiers"&gt;&lt;h4&gt;3.3.1 Clock Server and Notifiers&lt;/h4&gt;
&lt;p&gt;Our &lt;code&gt;clockserver&lt;/code&gt; is a simple forever loop with a switch statement that just receives and handles the request. It blocks waiting user tasks by not replying until their delay has been reached. Our clock server does not keep time.&lt;/p&gt;
&lt;p&gt;Our clock server handles the delay events by adding the requested delay to the current time and storing this number along with the tasks tid in an &lt;code&gt;ordered linked list&lt;/code&gt;. For delay_until, we simply do the same but store only the inputted ticks. The server then checks through the &lt;code&gt;ordered linked list&lt;/code&gt; for tasks to unblock.&lt;/p&gt;
&lt;p&gt;Our &lt;code&gt;clock_notifiers&lt;/code&gt; is also a simple forever loop that waits on the &lt;code&gt;TIMER3&lt;/code&gt; interrupt. On every interrupt, the notifier will increment it's &lt;code&gt;cur_time&lt;/code&gt; variable to keep time. We have it here so that in the case we choose not to send to the clock server every tick, the time count will not be affects. Every loop, it will send the current time to &lt;code&gt;clockserver&lt;/code&gt;.&lt;/p&gt;
&lt;/section&gt;&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="34-optimizations"&gt;&lt;h3&gt;3.4 Optimizations&lt;/h3&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="341-task-descriptor"&gt;&lt;h3&gt;3.4.1 Task descriptor&lt;/h3&gt;
&lt;p&gt;In order to save room on the task descriptor struct (for when we lock it to cache) we removed the return value pointer from it. It is now saved directly into the user's stack during &lt;code&gt;sys_handle&lt;/code&gt;. We can do this because we have the user's stack pointer and know the offset of the return value pointer.&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="342-memcpy"&gt;&lt;h3&gt;3.4.2 Memcpy&lt;/h3&gt;
&lt;p&gt;Memcpy has been modified to copy in batch sizes. This change has positive, but very minor changes to majority of the copy operations since they are generally not large enough to utilize the optimization. But it does dramatically decrease the execution time of the few large copy operations. Especially if the size of the data is a multiple of 32 bytes, since we use at most 8 registers &lt;code&gt;r3-r10&lt;/code&gt; to perform the copy. This optimization will allow us to perform demanding string copy operations when the time comes.&lt;/p&gt;
&lt;hr /&gt;
&lt;/section&gt;&lt;/section&gt;&lt;section class="&amp;quot;section section1&amp;quot;" id="4-program-output"&gt;&lt;h1&gt;4. Program Output&lt;/h1&gt;
&lt;p&gt;This program can be run from the main menu by pressing the number &lt;code&gt;3&lt;/code&gt; key.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;71&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Delay&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Iterations&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section1&amp;quot;" id="5-bugs"&gt;&lt;h1&gt;5. Bugs&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Currently the hash table used by the nameserver does not handle collisions. We used a fairly large table and a well tested hash function to deter these collisions.&lt;/li&gt;
&lt;/ol&gt;
&lt;section class="&amp;quot;section section3&amp;quot;" id="51-quirks"&gt;&lt;h3&gt;5.1 Quirks&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If a task keeps dying and being created, while no other tasks change status, then its &lt;code&gt;task_id&lt;/code&gt; is reused, and incremented by &lt;code&gt;TOTAL_TASKS&lt;/code&gt;. Thus you see major jumps in &lt;code&gt;task_id&lt;/code&gt; values. &lt;em&gt;Note: we have added a tail pointer to our task array, so now the tasks recycle better, but this can still happen in a very rare case&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;e.g. with TOTAL_TASKS = 64&lt;/p&gt;
&lt;p&gt;4 &amp;gt;&amp;gt; 68 &amp;gt;&amp;gt; 132 &amp;gt;&amp;gt; 196 &amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;As a temporary fix, until we get to the IO Server up and running, when returning from hardware interrupts, the task is scheduled back onto the front of it's priority. This means that it schedules using &lt;code&gt;FILO&lt;/code&gt; instead of &lt;code&gt;Round Robin&lt;/code&gt;. We do this to avoid user tasks getting interrupted during a print and causing the output to be jumbled up.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;/section&gt;&lt;/section&gt;&lt;section class="&amp;quot;section section1&amp;quot;" id="6-thoughts-and-comments"&gt;&lt;h1&gt;6. Thoughts and Comments&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;My thoughts, for anyone trying to understand the code&lt;/p&gt;
&lt;/blockquote&gt;
&lt;section class="&amp;quot;section section3&amp;quot;" id="61-code-flags"&gt;&lt;h3&gt;6.1 Code Flags&lt;/h3&gt;
&lt;p&gt;There are a few flags that you can pass into the preprocessor, which allow you to try a few things. See the &lt;code&gt;Common.mk&lt;/code&gt; file in the root directory. There you will find the &lt;code&gt;DEFINES&lt;/code&gt; variable, where you can uncomment these flags and compile. You can also play around with the extra compiler flags.&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;DEBUG&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Enables the &lt;code&gt;ASSERTS&lt;/code&gt; flag.&lt;/p&gt;
&lt;p&gt;This also enables any debug only code, notably the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Prints an overview of the kernel state after every task run. This includes the syscall request, its arguments, and any return values (which may not make sense if the syscall does not return a value)&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;ASSERTS&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Enables &lt;code&gt;asserts&lt;/code&gt; and other things in the &lt;code&gt;assert.h&lt;/code&gt; file,&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;LOCAL&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Used to toggle required changes to compile the test-suite for my machine&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;We can also toggle some optimizations&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;ENABLE_CACHE&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Turns on the caches&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;OPT_MEMCPY&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;Turns on the memcpy optimization&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;OPT_ATTRIBUTES&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Toggles the function attibutes which give gcc more information&lt;/p&gt;
&lt;p&gt;&lt;code&gt;const&lt;/code&gt;: Doesn't read/write to globals&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pure&lt;/code&gt;: Only reads globals&lt;/p&gt;
&lt;p&gt;&lt;code&gt;noret&lt;/code&gt;: The function is not expected to return;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;naked&lt;/code&gt;: GCC will not add any function entry/exit code&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="62-todos"&gt;&lt;h3&gt;6.2 Todos&lt;/h3&gt;
&lt;p&gt;The important todo's are listed below:&lt;/p&gt;
&lt;p&gt;The other miscellaneous todos go here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;task_id&lt;/code&gt; needs to overflow properly, otherwise it will wrap around to potentially in-use &lt;code&gt;task_id&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also the following need to be thought about&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Our Stack is currently using space that manages to be empty (calculated by us) however we can just allocate an array of STACK_SIZE * TOTAL_TASKS, and use that array to ensure there will be room, and we won't be using memory that might be taken by the kernel later.&lt;/li&gt;
&lt;/ul&gt;
&lt;section class="&amp;quot;section section4&amp;quot;" id="631-optimization-todos"&gt;&lt;h4&gt;6.3.1 Optimization TODOs&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;g++ -O2 -falign-functions=16 -falign-loops=16 (alignment)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compare the -Os to our current -O3 flags&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;-flto (can be set to individual files https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html) or -fwhole-program (linker optimizations)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;test out the arm compiler&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Currently the hardware interrupt code is mostly a copy of the software interrupt code. We can probably try to optimize them both further by removing things specific to each one.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We need to figure out what to cache lock, and re-arrange them to be in consequtive memory. Currently we call many functions when doing system calls, which would incur overhead since they would be in different memory regions.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;section class="&amp;quot;section section1&amp;quot;" id="7-files-how-to-run"&gt;&lt;h1&gt;7. Files &amp;amp; How to Run&lt;/h1&gt;
&lt;section class="&amp;quot;section section2&amp;quot;" id="71-getting-code-access"&gt;&lt;h2&gt;7.1 Getting Code Access&lt;/h2&gt;
&lt;p&gt;There are 2 ways of getting access to the code&lt;/p&gt;
&lt;section class="&amp;quot;section section3&amp;quot;" id="711-github"&gt;&lt;h3&gt;7.1.1 Github&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;code&gt;Site&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;https://github.com/login&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;Username&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;Searea&lt;/code&gt;&lt;/dd&gt;
&lt;dt&gt;&lt;code&gt;Password&lt;/code&gt;&lt;/dt&gt;
&lt;dd&gt;&lt;code&gt;cs452_access&lt;/code&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;After logging in you just need to go to the following url &lt;code&gt;https://github.com/Saevon-Altimit/Trains/tree/k3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you wish to clone the repo, there is an ssh key in the &lt;code&gt;ssh&lt;/code&gt; folder, this grants anyone read-only access to the repo. (minimal git knowledge is assumed)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# The ./ssh/cs452 data goes here&lt;/span&gt;
vim ~/.ssh/id_rsa
&lt;span class="c"&gt;# The ./ssh/cs452.pub data goes here&lt;/span&gt;
vim ~/.ssh/id_rsa.pub

git clone git@github.com:Saevon-Altimit/Trains.git trains

&lt;span class="c"&gt;# NOTE: There are now 3 tags which indicate different submissions: k1, k2, and k3&lt;/span&gt;
&lt;span class="c"&gt;# So we need to switch to the correct branch&lt;/span&gt;
git checkout k3
&lt;/pre&gt;&lt;/div&gt;


&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="712-school-linux-servers"&gt;&lt;h3&gt;7.1.2 School Linux Servers&lt;/h3&gt;
&lt;p&gt;It is unknown whether the &lt;code&gt;cs452_sf&lt;/code&gt; group grants you access to folders within, however if this is true, you can find the code in &lt;code&gt;/u8/sfilippov/cs452/kernel-3/&lt;/code&gt;&lt;/p&gt;
&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="72-compilation-and-misc-uses"&gt;&lt;h3&gt;7.2 Compilation and Misc Uses&lt;/h3&gt;
&lt;p&gt;The program can be compiled by executing the following command, note that the resulting &lt;code&gt;*.elf&lt;/code&gt; files will be in the &lt;code&gt;main&lt;/code&gt; folder. A copy of the resulting &lt;code&gt;*.elf&lt;/code&gt; files will also be in the root directory, as a precaution.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;submit.elf&lt;/code&gt; file is the submission file, it runs the kernel 3 task, then waits for a &lt;code&gt;q&lt;/code&gt; keypress to exit. It provides a console menu above, so you can play around with it more.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# Run this in the root folder of the project&lt;/span&gt;
make kern
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Remember! there are some flags you can pass in to customize the compiled product, see section &lt;code&gt;6.2 Code Flags&lt;/code&gt;. (Or look at the main Makefile)&lt;/p&gt;
&lt;p&gt;There are also a few more things you can do:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# run the unit tests on your machine&lt;/span&gt;
&lt;span class="c"&gt;# WARNING: this will not compile with the wmcowan gcc&lt;/span&gt;
&lt;span class="c"&gt;#   this is made to compile with normal gcc&lt;/span&gt;
&lt;span class="c"&gt;#   so some path tweaking, or not doing this on the school servers, is required&lt;/span&gt;
make &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/section&gt;&lt;section class="&amp;quot;section section3&amp;quot;" id="73-files-md5"&gt;&lt;h3&gt;7.3 Files &amp;amp; MD5&lt;/h3&gt;
&lt;div class="md5"&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bwio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;c6b99f3cc99905e2800680d7353b250&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cc52b0b6ce582f4fe7d13bd3ef53a52a&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;errno&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;858376e4649&lt;/span&gt;&lt;span class="n"&gt;ecfdc4ab8a0e0eb8c168a&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;io&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;76&lt;/span&gt;&lt;span class="n"&gt;a4b1a0ca13f5e800f7e2efbec20667&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kern&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;41&lt;/span&gt;&lt;span class="n"&gt;cc5525ca867bee79c50accc8d8f0bb&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kern&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pqueue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                 &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="n"&gt;caec69935ce7d7136616666b5085cb8&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kern&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;syscall&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;eb924ee9052b4594d36fca4f1f644813&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kern&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;a6ad3149a012238a414aa8a7c95364c&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;linklist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;61f&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="n"&gt;de5eda4fe3fb9819ecb7ae6b9ca8&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;machine&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;arm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                 &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;528e62&lt;/span&gt;&lt;span class="n"&gt;cb00459a09f9ae301c76d89b62&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;machine&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ts7200&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;              &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a7be86663a46ddf66cdc3cea59bf3a28&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stdlib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;               &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;699271&lt;/span&gt;&lt;span class="n"&gt;c531466966ee5dcf6f01e21317&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stdlib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stdtype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;              &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="n"&gt;d6264e93f95bda95582ca65826194f1&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stdlib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b8d122201fee6bfac0e0b8032ecbdeae&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;syscall&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="n"&gt;ce2660776640fd49b7acfec3a93324&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cfa349ff6c03d8ca3174d2edee576bde&lt;/span&gt;

&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Common&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                             &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f86662bd294cc18c4aed266489dd531b&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Cred&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                               &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="n"&gt;d27c6b9c7f3e97f2b8741e747ce62&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Makefile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                              &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d8f3d09a2c1d4bc03162930d4c6e800b&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Makefile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                         &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="n"&gt;b20f79d3a0bcccc67b4e6e60ffc654&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;forkbomb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;a106ed3519f33358bfb0355f83e8391e&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kern&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="n"&gt;a1352005329b5fdf37b9929104a5483&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;spawner&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;6834f&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="n"&gt;b0faa2f98ccc69cff4cdd5fe67&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;voider&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                         &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df2b5ce305ccdd9155a9b8a2cf33ad49&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;orex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ld&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e74784fc9d2207bcf1843f68c350f8f2&lt;/span&gt;

&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Makefile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e244b32cc00c9e88364b51c253340d42&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Local&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;356&lt;/span&gt;&lt;span class="n"&gt;ea1ad022df01cc3d510c9a7639e00&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b3600b57c524a86b58db5a5da4fc6786&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                            &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;65&lt;/span&gt;&lt;span class="n"&gt;d60b790b38c979f7b68ac2e8a99967&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kern&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;asm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;93f8200424f&lt;/span&gt;&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="n"&gt;d55addb58425c5d4224&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kern&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="n"&gt;b4c7c3e6264cf924df63a61069fa919&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kern&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pqueue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;e6d628482fa726809d207e8b1637340e&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kern&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;syscall&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sys_create&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;         &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;de349799f26e259d492500c9d7d89018&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kern&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;syscall&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sys_exit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;d09aa1c4e3bede262cb05a214ad2695&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kern&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;syscall&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sys_get_parent_tid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;a53d4f6e1d2c7063404f0618d72d1e9&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kern&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;syscall&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sys_get_priority&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;de080b04eb5acccf5676ca11f6782fdb&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kern&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;syscall&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sys_get_tid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;bf9d43ea8570c4c5f7d48b3b112d5ce5&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kern&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;syscall&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sys_handle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;         &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;16237681&lt;/span&gt;&lt;span class="n"&gt;d973e2009b24529acbef4fa0&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kern&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;syscall&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sys_pass&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;448491&lt;/span&gt;&lt;span class="n"&gt;bc79bca6e55e505cc5a630b62c&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kern&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;syscall&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sys_set_priority&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;33181&lt;/span&gt;&lt;span class="n"&gt;ee630bcf3aecefdbd8cfb7be4bb&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;kern&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;06f&lt;/span&gt;&lt;span class="n"&gt;edbcb5c39ab6c60c4d12513530291&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bwio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="n"&gt;d6e950323e0cb3d5d788a682c0a491e&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;fake_bwio&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;9667&lt;/span&gt;&lt;span class="n"&gt;a9be550162fdb3c442ddb52d9243&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;linklist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b3c01a9f67146bf042b9072e5b5c9675&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;stdlib&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ad7427f8c92901418c5e2e4773ab12e4&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;syscall&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d16d11126776e6c6cfc1a90ae8547337&lt;/span&gt;

&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Makefile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                        &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="n"&gt;a2cecbbad14c26fce8c0b49154a660&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;arm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;armtest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;49&lt;/span&gt;&lt;span class="n"&gt;c94900ce147444ca37dddcf9bced30&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;arm&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;armtest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;b2321883e83c3403c08d9c2d04c0c39&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fb0d58dc497091a0ea7d4f09d665ccd7&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                         &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;63e8314&lt;/span&gt;&lt;span class="n"&gt;c03f8d2966d8568c06f807408&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;test_handle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ed54a9683f165f9814111d2d0d171bf4&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;test_linklist&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                 &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7413&lt;/span&gt;&lt;span class="n"&gt;d7b097d401c445d8fa066b3f109e&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;test_pqueue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="n"&gt;bcc968e96a858a20af0b8043c3f398&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;test_pqueue_priority&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;          &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;575e9&lt;/span&gt;&lt;span class="n"&gt;e2ca0b3ed70e8e158c284af3322&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;test_sample&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ac9f56de292958078b48a34029156077&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;test_syscall&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;333971&lt;/span&gt;&lt;span class="n"&gt;b4fae238d67895c3028cc1cc1c&lt;/span&gt;
&lt;span class="n"&gt;MD5&lt;/span&gt; &lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tests&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;test_task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;226&lt;/span&gt;&lt;span class="n"&gt;a6658e4f93529f1d785b058e6fb81&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;</summary><category term="assignment"></category></entry></feed>